/* ==========================================================================
   MIXIN
   ========================================================================== */

@mixin large {
  @media only screen and (max-width: screen(large)) {
    @content;
  }
}

@mixin medium {
  @media only screen and (max-width: screen(medium)) {
    @content;
  }
}

@mixin small {
  @media only screen and (max-width: screen(small)) {
    @content;
  }
}

@mixin iphone5 {
  @media only screen and (max-width: screen(iphone5)) {
    @content;
  }
}

@mixin mq($width) {
  @media only screen and (max-width: $width) {
    @content;
  }
}

//key frame animation
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin mqMin($width) {
  @media only screen and (min-width: $width) {
    @content;
  }
}

// Safari Browser
@mixin safariBrowser {
  @media not all and (min-resolution: 0.001dpcm) {
    @supports (-webkit-appearance: none) and (not (stroke-color: transparent)) {
      @content;
    }
  }
  @media not all and (min-resolution: 0.001dpcm) {
    @supports (-webkit-appearance: none) and (stroke-color: transparent) {
      @content;
    }
  }
}

// Firefox Browser
@mixin firefoxBrowser {
  @-moz-document url-prefix() {
    @content;
  }
}

// Ms Edge Browser
@mixin msEdgeBrowser {
  @supports (-ms-ime-align: auto) {
    @content;
  }
}

// IEBrowser
@mixin IEBrowser {
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    @content;
  }
}

@mixin clearfix() {
  &:before,
  &:after {
    content: ' ';
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin colors-all-font {
  color: color(black);
  &.primary {
    color: color(primary, 100);
  }
  &.secondary {
    color: #73808c;
  }
  &.disable {
    color: #c7ccd1;
  }
  &.white {
    color: color(white);
  }
}

@mixin colors-all-system {
  color: color(#2e5aac);
  &.error {
    color: #e93c3c;
  }
  &.warning {
    color: #ffbc1f;
  }
  &.successful {
    color: #1ab759;
  }
  &.normal {
    color: color(#2e5aac);
  }
}

@mixin system-background-color {
  background-color: color(primary, 100);
  &.base {
    background-color: #f9f9f9;
  }
  &.white {
    background-color: #fff;
  }
}

@mixin system-brand-color {
  background-color: color(primary, 100);
  &.primary {
    color: #00529c;
  }
  &.highlight {
    color: #528de0;
  }
  &.dark {
    color: #0f2d57;
  }
}

@mixin system-border-color {
  border-color: color(black);
  &.primary {
    border-color: #dadada;
  }
  &.primary90 {
    border-color: color(primary, 90);
  }
  &.grey125 {
    border-color: color(grey, 125);
  }
  &.grey100 {
    border-color: color(grey, 100);
  }
  &.grey50 {
    border-color: color(grey, 50);
  }
  &.error {
    border-color: color(system, error);
  }
  &.warning {
    border-color: color(system, warning);
  }
  &.successful {
    border-color: color(system, successful);
  }
  &.white {
    border-color: color(white);
  }
}

@mixin hover-button($type) {
  &:hover {
    color: color(white);
    .a-system-icon {
      color: color(white);
    }
  }
  @if $type == 'default' {
    &:hover {
      background-color: color(grey, 75);
      border-color: color(grey, 75);
    }
  } @else if $type == 'primary' {
    &:hover {
      background-color: color(blue, 150);
      border-color: color(blue, 150);
    }
  } @else if $type == 'secondary' {
    &:hover {
      background-color: color(orange, 120);
      border-color: color(orange, 120);
    }
  } @else {
    &:hover {
      color: color(white);
      background-color: color(orange, 100);
      border-color: color(orange, 100);
    }
  }
}

@mixin active-visited-target-blank-button {
  &:active {
    @content;
  }
  .android-browser &,
  .blackberry-browser &,
  .ios-browser &,
  .windows-phone-browser & {
    &[target='_blank']:hover {
      @content;
    }
  }
}

@mixin active-visited-target-blank-action-button {
  &:active,
  &:visited {
    @content;
  }
  .android-browser &,
  .blackberry-browser &,
  .ios-browser &,
  .windows-phone-browser & {
    &[target='_blank']:hover {
      @content;
    }
  }
}

@mixin placeholder-color($color) {
  &::-webkit-input-placeholder {
    color: $color;
    -webkit-text-fill-color: $color;
  }
  &:-webkit-input-placeholder {
    color: $color;
    -webkit-text-fill-color: $color;
  }
  &::-moz-placeholder {
    color: $color;
    -webkit-text-fill-color: $color;
  }
  &:-moz-placeholder {
    color: $color;
    -webkit-text-fill-color: $color;
  }
  &::-ms-input-placeholder {
    color: $color;
    -webkit-text-fill-color: $color;
  }
  &:-ms-input-placeholder {
    color: $color;
    -webkit-text-fill-color: $color;
  }
  &:placeholder-shown {
    color: $color;
    -webkit-text-fill-color: $color;
  }
}

@mixin font-weight-child {
  .light {
    font-weight: fw(light);
  }
  .reguler {
    font-weight: fw(reguler);
  }
  strong,
  .bold {
    font-weight: fw(bold);
  }
  .black {
    font-weight: fw(black);
  }
}

@mixin font-weight-default-light {
  font-weight: fw(light);
  &.reguler {
    font-weight: fw(reguler);
  }
  &.bold {
    font-weight: fw(bold);
  }
  &.black {
    font-weight: fw(black);
  }
  @include font-weight-child;
}

@mixin font-weight-default-reguler {
  font-weight: fw(reguler);
  &.light {
    font-weight: fw(light);
  }
  &.bold {
    font-weight: fw(bold);
  }
  &.black {
    font-weight: fw(black);
  }
  @include font-weight-child;
}

@mixin shadow($type) {
  @if $type == 'on-white' {
    box-shadow: 4px 8px 32px 0 rgba(32, 32, 35, 0.08);
  } @else if $type == 'on-gray' {
    box-shadow: 4px 4px 8px 0 rgba(32, 32, 35, 0.05);
  } @else if $type == 'on-white-card' {
    box-shadow: 0 2px 4px 0 rgba(32, 32, 35, 0.25);
  } @else if $type == 'on-hover' {
    box-shadow: 0 0 32px 0 rgba(32, 32, 35, 0.26);
  }
}

@mixin colors-all-font-hover {
  color: color(black);
  transition: color 0.25s ease;
  &:hover {
    color: darken(color(black), 10%);
  }
  &:active {
    color: darken(color(black), 20%);
  }
  &.primary100 {
    color: color(primary, 100);
    &:hover {
      color: darken(color(primary, 100), 10%);
    }
    &:active {
      color: darken(color(primary, 100), 20%);
    }
  }
  &.grey125 {
    color: color(grey, 125);
    &:hover {
      color: darken(color(grey, 125), 10%);
    }
    &:active {
      color: darken(color(grey, 125), 20%);
    }
  }
  &.grey100 {
    color: color(grey, 100);
    &:hover {
      color: darken(color(grey, 100), 10%);
    }
    &:active {
      color: darken(color(grey, 100), 20%);
    }
  }
  &.grey50 {
    color: color(grey, 50);
    &:hover {
      color: darken(color(grey, 50), 10%);
    }
    &:active {
      color: darken(color(grey, 50), 20%);
    }
  }
  &.grass50 {
    color: color(grass, 50);
    &:hover {
      color: darken(color(grass, 50), 10%);
    }
    &:active {
      color: darken(color(grass, 50), 20%);
    }
  }
  &.error {
    color: color(system, error);
    &:hover {
      color: darken(color(system, error), 10%);
    }
    &:active {
      color: darken(color(system, error), 20%);
    }
  }
  &.warning {
    color: color(system, warning);
    &:hover {
      color: darken(color(system, warning), 10%);
    }
    &:active {
      color: darken(color(system, warning), 20%);
    }
  }
  &.successful {
    color: color(system, successful);
    &:hover {
      color: darken(color(system, successful), 10%);
    }
    &:active {
      color: darken(color(system, successful), 20%);
    }
  }
  &.white {
    color: color(white);
    &:hover {
      color: color(grey, 50);
    }
    &:active {
      color: color(grey, 75);
    }
  }
}

@mixin font-weight-heading {
  font-weight: fw(bold);
  &.light {
    font-weight: fw(light);
  }
  &.reguler {
    font-weight: fw(reguler);
  }
  &.black {
    font-weight: fw(black);
  }
  @include font-weight-child;
}

@mixin remove-tap-highlight {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  user-select: none;
}

// scroll-x-auto
@mixin scroll-x-auto {
  white-space: nowrap;
  overflow-y: hidden;
  overflow-x: auto;
  -ms-overflow-style: none;
  &::-webkit-scrollbar {
    -webkit-appearance: none;
    display: none;
    width: 0;
  }
}

// scroll-x-touch
@mixin scroll-x-touch {
  white-space: nowrap;
  overflow-y: hidden;
  overflow-x: auto;
  -ms-overflow-style: none;
  &::-webkit-scrollbar {
    -webkit-appearance: none;
    display: none;
    width: 0;
  }
}

// scroll-y
@mixin scroll-y-auto {
  overflow-x: hidden;
  overflow-y: auto;
  -ms-overflow-style: none;
  &::-webkit-scrollbar {
    -webkit-appearance: none;
    display: none;
    width: 0;
  }
}

@mixin scroll-y-touch {
  overflow-x: hidden;
  overflow-y: auto;
  // -webkit-overflow-scrolling: touch;
  -ms-overflow-style: none;
  &::-webkit-scrollbar {
    -webkit-appearance: none;
    display: none;
    width: 0;
  }
}

// scroll-hide-x
@mixin scroll-hide-x {
  white-space: nowrap;
  overflow-y: hidden;
  overflow-x: auto;
  -ms-overflow-style: none;
  // -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    -webkit-appearance: none;
    display: none;
    width: 0;
  }
}

// scroll-hide-y
@mixin scroll-hide-y {
  overflow-x: hidden;
  overflow-y: auto;
  -ms-overflow-style: none;
  // -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    -webkit-appearance: none;
    display: none;
    width: 0;
  }
}

// ellipsis
@mixin ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// multiline-ellipsis
@mixin multiline-ellipsis($row) {
  overflow: hidden;
  display: block;
  display: -webkit-box;
  -webkit-line-clamp: $row;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
}

// ---------------------------------------------------------------------------------
// Text Crop
// ---------------------------------------------------------------------------------
@mixin text-crop(
  $line-height: 1.3,
  $top-adjustment: 0px,
  $bottom-adjustment: 0px
) {
  // Configured in Step 1
  $top-crop: 15;
  $bottom-crop: 13;
  $crop-font-size: 31;
  $crop-line-height: 1.6;

  // Apply values to calculate em-based margins that work with any font size
  $dynamic-top-crop: max(
      ($top-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)),
      0
    ) / $crop-font-size;
  $dynamic-bottom-crop: max(
      (
        $bottom-crop + ($line-height - $crop-line-height) *
          ($crop-font-size / 2)
      ),
      0
    ) / $crop-font-size;

  // Mixin output
  line-height: $line-height;

  &::before,
  &::after {
    content: '';
    display: block;
    height: 0;
    width: 0;
  }

  &::before {
    margin-bottom: calc(-#{$dynamic-top-crop}em + #{$top-adjustment});
  }

  &::after {
    margin-top: calc(-#{$dynamic-bottom-crop}em + #{$bottom-adjustment});
  }
}

@mixin page-wrapper {
  .page-wrapper {
    min-height: calc(100vh - 70px);
    margin-left: 250px;
    background-color: #f5f6f9;
    padding: 20px;
    position: relative;
    @include small {
      min-height: 100vh;
      margin-left: 0;
      padding: 0;
    }

    .content-container {
      @content;
    }

    .information-wrapper {
      margin: 21px 10px;
      @include small {
        margin: unset;
      }

      .card {
        margin-top: 20px;
      }
    }
  }
}
